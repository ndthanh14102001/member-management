/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Entity._Device;
import Entity._Member;
import Helper.DateHelper;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class GUI_BorrowAndReturnDevice extends javax.swing.JFrame {

    /**
     * Creates new form GUI_BorrowAndReturnDevice
     */
    private DefaultTableModel model;
    private List<_Device> devices = new ArrayList<>();

    public GUI_BorrowAndReturnDevice() {
        initComponents();
        model = new DefaultTableModel();
        model.addColumn("Mã Thiết Bị");
        model.addColumn("Tên Thiết Bị");
        model.addColumn("Mã Thành viên");
        model.addColumn("Tên Thành Viên");

        tbDevices.setModel(model);
        displayDataInTable();
    }

    private void displayDataInTable() {
        // Xóa dữ liệu cũ
        model.setRowCount(0);
        this.devices.clear();
        // Lấy dữ liệu từ bảng 1 và thêm vào model1
        List<Object[]> borrowAndReturnData = getDevicesData();

        if (borrowAndReturnData != null) {
            for (Object[] data : borrowAndReturnData) {

                // Thêm dữ liệu vào model1
                model.addRow(new Object[]{
                    data[0],
                    data[1],
                    data.length >= 3 ? data[2] : "",
                    data.length >= 4 ? data[3] : ""});
            }
        }
    }

    private List<Object[]> getDevicesData() {
        if (cbSelectDeviceState.getSelectedIndex() == 0) {
            return new BUS.BUS_UsageInformation().getAvailableDevices();
        }
        return new BUS.BUS_UsageInformation().getNotAvailableDevices();
    }

    private _Device getSelectedDevice() {

        // Lấy chỉ số của hàng được chọn
        int row = tbDevices.getSelectedRow();

        // Kiểm tra nếu hàng được chọn hợp lệ
        if (row >= 0 && row < tbDevices.getRowCount()) {
            // Lấy dữ liệu từ bảng và hiển thị vào các thành phần trên giao diện
            String maTB = (String) tbDevices.getValueAt(row, 0);
            return new _Device(maTB);
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDevices = new javax.swing.JTable();
        cbSelectDeviceState = new javax.swing.JComboBox<>();
        btnReturn = new javax.swing.JButton();
        btnBorrow = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ MƯỢN VÀ TRẢ THIẾT BỊ");

        tbDevices.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbDevices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbDevices);

        cbSelectDeviceState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbSelectDeviceState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thiết bị trống", "Thiết bị đã được mượn" }));
        cbSelectDeviceState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectDeviceStateActionPerformed(evt);
            }
        });

        btnReturn.setBackground(new java.awt.Color(204, 204, 204));
        btnReturn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnReturn.setText("Trả thiết bị");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnBorrow.setBackground(new java.awt.Color(204, 204, 204));
        btnBorrow.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnBorrow.setText("Mượn thiết bị");
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Lịch sử mượn");

        btnRefresh.setBackground(new java.awt.Color(204, 204, 204));
        btnRefresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectDeviceState, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addGap(30, 30, 30)
                .addComponent(btnBorrow)
                .addGap(29, 29, 29)
                .addComponent(btnReturn)
                .addGap(39, 39, 39)
                .addComponent(jButton3)
                .addGap(206, 206, 206))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbSelectDeviceState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn)
                    .addComponent(jButton3)
                    .addComponent(btnBorrow)
                    .addComponent(btnRefresh))
                .addGap(72, 72, 72))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSelectDeviceStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectDeviceStateActionPerformed
        // TODO add your handling code here:
        displayDataInTable();
    }//GEN-LAST:event_cbSelectDeviceStateActionPerformed

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        // TODO add your handling code here:
        GUI_SelectMemberToBorrowDevice.main(getSelectedDevice());
    }//GEN-LAST:event_btnBorrowActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        displayDataInTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        if (new BUS.BUS_UsageInformation().returnDevice(getSelectedDevice())) {
            JOptionPane.showMessageDialog(null, "Trả thiết bị thành công !", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            displayDataInTable();
        } else {
            JOptionPane.showMessageDialog(null, "Trả thiết bị thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_BorrowAndReturnDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_BorrowAndReturnDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_BorrowAndReturnDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_BorrowAndReturnDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_BorrowAndReturnDevice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReturn;
    private javax.swing.JComboBox<String> cbSelectDeviceState;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDevices;
    // End of variables declaration//GEN-END:variables
}
